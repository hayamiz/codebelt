.SUBDIRS: images

###
### Main document filename (without .tex)
###

TARGET = report

#
# Setup global variables
#

if $(which platex)
  LATEX = platex -interaction=batchmode
  export
DVIPDFM = dvipdfmx
DVIPDFMFLAGS = -r 2400 -z 0 -f font.map

if $(which pbibtex)
  global.BIBTEX = pbibtex
  export
elseif $(which jbibtex)
  global.BIBTEX = jbibtex
  export

#
# PHONY rules
#

.PHONY: clean clobber build

clean:
  rm -f *.aux *.log *.bbl *.toc *.nav *.fls *.out *.snm *.vrb *.dvi *.blg

clobber: clean
  rm -f *.pdf

build: $(TARGET).dvi $(TARGET).pdf


#
# Scanners
#

.SCANNER: scan-svg-images: $(TARGET).tex $(ls i, *.tex)
  println($(TARGET).dvi: $(string $(replacesuffixes .svg, .eps, $(ls i, images/*.svg))))

# .SCANNER: scan-ai-images: $(TARGET).tex
#   println($(TARGET).dvi: $(string $(replacesuffixes .ai, .eps, $(ls i, images/*.ai))))

$(TARGET).dvi: :scanner: scan-svg-images
# $(TARGET).dvi: :scanner: scan-ai-images

#
# Document generation rules
#

LaTeXDocument($(TARGET), $(TARGET))

#
# Aux files
#

# uncompress PDF if there is pdftk
if $(which pdftk)
  # echo(pdftk is available)
  $(TARGET).uncomp.pdf: $(TARGET).pdf
    pdftk $< output $@ uncompress
  build: $(TARGET).uncomp.pdf


.DEFAULT: build
